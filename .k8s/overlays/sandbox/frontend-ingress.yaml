apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  labels:
    kubernetes.io/ingress.class: nginx
  annotations:
    # type of authentication
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - Daikin PAYG'
    nginx.ingress.kubernetes.io/configuration-snippet: |
           more_set_headers "Access-Control-Allow-Origin: $http_origin";
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE, PATCH
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - payg-sandbox.ext.gpmn.net
    secretName: wildcard-ext-gpmn-net
  rules:
  - host: payg-sandbox.ext.gpmn.net
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: frontend
            port: 
              number: 80
  - host: payg-sandbox.ext.gpmn.net
    http:
      paths:
      - pathType: Prefix
        path: "/api"
        backend:
          service:
            name: imt-payg-apigateway
            port: 
              number: 8001
---
apiVersion: v1
data:
  auth: cGF5ZzpVZ3A2YWFtYVJQNVNVCg==
kind: Secret
metadata:
  creationTimestamp: "2022-12-08T05:04:29Z"
  name: basic-auth
  resourceVersion: "44739453"
  uid: 8fa9c82d-7a2a-47bc-93a9-255950bd45a0
type: Opaque

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-imt-gateway-api
  labels:
    kubernetes.io/ingress.class: nginx
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
           more_set_headers "Access-Control-Allow-Origin: $http_origin";
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE, PATCH
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - payg-sandbox-api.ext.gpmn.net
    secretName: wildcard-ext-gpmn-net
  rules:
  - host: payg-sandbox-api.ext.gpmn.net
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: imt-payg-apigateway
            port: 
              number: 8001

---
apiVersion: v1
kind: Secret
metadata:
  name: wildcard-ext-gpmn-net
type: kubernetes.io/tls
data:
  tls.crt: ""
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBejQ3KzlaTHhGQnI5STE0ZGxHTHpycHNTZXpHVENSWHNuZzVNYy9kbmRhVVlwQzdoClFDRFRwVHZnT2Q5NnliTS9OUi8vS2NBbTNJZEVHbmhoUkJmQ0FPclcreUpKVHA4TTYxbzBrdVdiMm9KSzl0ek4Ka3hRTFFCbkgrT0w3RnJMRlU0aUJRNVhGRzkxSUNYTlJCVzJZbEhzb1pLOGNoaEd0M2pvSHJOU2E3V3p5eEVCYQpxMDYwODVlV0FON1NNclVvcUx0bkZGek9kUmltN21WbGpHVEJMd3ZuZ25xQWdvMDloaG1xaGwwVjF0WWFZcldNCldQVmVsZmJGc256ZlBXS3NFdjJRMld6K05HdkdZWEl2VEhDVWlrbnY0enpITXZtMzNmamVxeHcrVWRNc3FhbS8KR1JGM1IxeTRWNkJjV2tGM0gwQkF2bmVCZ3BNY3A0em5JKzJ2aXdJREFRQUJBb0lCQVFDMm04MXV5MC8wNjJYSgpCeFdwSm9IVUhiVGQxQmpUeG9rOTZjQ1R5cGdvcGc4TzYvdmJTc1pLT21xbElCeE1kcnBtaC9jYmlXWG5ZYzZtCkowRVVBbjc2QmFNTW9mYXpDRFg2bm90Z3JrZzNyNmc2bHJyNjZvaVhaZGRNL280QVExcGVpdHVIVmE1c1BId1QKYkhSYy9UWmZkQmR1dGEyM3VyZ29xdzl6bkQyT0lsVjdjM29hcFkwRk9jU0daaVd0MUZGWkZrQ1YwYTVaVVB0NwpLWmlKako1WlZjY2VRUEFCdUJkT3IrN0crNHVZcFMxMWlyYXhNNEJ6TXpGUDFMQnJuRHBEa09vK2VKZERvSXpJCndySXVVYjhOWTN2TmNWMEFQQ1RVOTFUaWcwVGxkU2NYaVFPd28reVRicHpMR0Jyc0ppZXlKbStWRFRaU0ZIclEKRXl1Z1B6V1JBb0dCQU83TUNFdmtLcUh4cDFFSlpGMFNlNE9obWh1RXl5NVdSdDNrUW16ODFvQmlKMm1WU2U5MAo1eHdXUjhrazI1TUJCY0pveUNHOFdPNDdQczZ1QUhDUXFoWGxuZS9LYU9Fb1JNekdTN3J1QkJZTG5ES2FZK0lxCjUzMCtCYmpQd09ZbGc5YnNXUHZpT1g3N1ZMNU81OWlWVXlLQllRWk13WkxNbG41bXFmT1lnalFEQW9HQkFONkMKMnR5ZzgxRVltS1l1bERSQ1Uvb1V4cEFaWkJTTVBUL2RLUDBEYWdHYVkxNXFtNUFCekdYZytEUVoyVmFxa05rbAp2bldGWGd2cnVRaGNFbWdPMDVsNkhLZDFrdS91eGpicmJpZWJmckl3SGVQczRPUzBheUQyTXRFUWZRWU84LzJRCmhudjdhSkFrOGlkU2d5V24yRW1CdDgva3RIVHVubG5MOHRmVEVUUFpBb0dCQUpUUDc0ZWp5L0daejZRUGowejAKL0tYZUtsUmwzOXlqaFl3MytERkZLME5jWjZWRGxJeTJOR1ByZXBiZDhqdmRFa0xCMjU0eWF0VWpkSk9HR2Q0TQpPUUptVXBNaGQxU0JMTWJUK0ZPb2lrRld3T05FRldUWFNlVmhwbDB5a3NxWnJGeGVjMkdjN0NtMjVHdW9icEVwCkZXTFdiNmxtWWVkaXVaSlIxaTFvNkJNVEFvR0FUZVpCK1R2ZjgyUkpET1VCdmNuNjNIS3BrWWxTSUY5NGtnTTcKZGxqYm8vUUpGZVQ4MFUzUDRWc0JpandDZXZUOEFRblZ4QThNL2Q5b3lDUnp6VHBqbWpmR0VGcDVOc2JCWGpqTwpOOCtZYTRtczdUN2cvVENzMEwxZ3pSQ1l0S1pIaFY0enR2UXRoMGxuL1p4RmpjbFZUMmE2azIzZVA1SEtubVZvCmYyYkZmd0VDZ1lFQXpIWkZtUStHNmtrbUMrTEZNcnVZdUo5bHpzbkhseTN3SExvb002V09BYkpIczRQNjJ2QnEKMnBocnJwaTRoc1pwaFdWTHVzVFU1VFFmTjFvY2YvcERkZkRYaDFmaHF4bWxNejBnaEYvakRQbWhrd0lYUnpONQpkbHFZdHlWN0VCOVFqb3pVLzBpL1Z4bmZUUVhONU0rV2VFS1VZVXhaV3p2dGNDZTF1ZGExcDZBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
